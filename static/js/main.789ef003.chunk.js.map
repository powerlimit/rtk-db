{"version":3,"sources":["types/todo.ts","config/index.ts","services/todoAPI.ts","hooks/useAxios.ts","store/action-creators/user.ts","store/reducers/user/userSlice.ts","helpers/errorHandler.ts","store/index.ts","hooks/useTypedSelector.ts","store/action-creators/todo.ts","store/action-creators/index.ts","hooks/useActions.ts","components/Menu.tsx","components/Layout.tsx","components/ItemModal.tsx","components/UserItem.tsx","components/Pagination.tsx","pages/users.tsx","components/TodoItem.tsx","components/TotoList.tsx","pages/todos.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoActionTypes","baseUrl","todoAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","tagTypes","endpoints","build","fetchTodos","query","params","url","providesTags","keepUnusedDataFor","fetchTodoById","id","addTodos","mutation","todo","method","body","invalidatesTags","editTodos","removeTodos","useFetchTodosQuery","useAddTodosMutation","useEditTodosMutation","useRemoveTodosMutation","instance","axios","create","baseURL","fetchUsers","createAsyncThunk","page","thunkAPI","a","get","_page","_limit","users","data","rejectWithValue","message","addUser","userName","user","name","post","editUser","put","removeUser","delete","userSlice","createSlice","initialState","loading","error","reducers","setPage","state","action","payload","extraReducers","builder","addCase","pending","type","fulfilled","rejected","push","idx","findIndex","filter","u","actions","rtkQueryErrorLogger","api","next","isRejectedWithValue","toast","store","configureStore","reducer","userReducer","middleware","getDefaultMiddleware","concat","getState","useTypedSelector","useSelector","limit","dispatch","FETCH_TODOS","resp","FETCH_TODOS_SUCCESS","FETCH_TODOS_ERROR","addTodo","editTodo","EDIT_TODO","removeTodo","REMOVE_TODO","actionCreators","UserActionCreators","TodoActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","Menu","Nav","activeKey","onSelect","selectedKey","alert","Item","className","to","Layout","children","Container","ItemModal","show","setShow","title","handleSave","value","isLoading","useState","val","setVal","Modal","onHide","Header","closeButton","Title","Body","onChange","e","currentTarget","placeholder","Footer","Button","variant","onClick","disabled","removeModal","setRemoveModal","editModal","setEditModal","handleRemove","handleEdit","ListGroup","ButtonGroup","aria-label","React","memo","PaginationComponent","Pagination","Array","map","i","n","active","Users","showModal","setShowModal","useEffect","UserItem","handleComplete","completed","undefined","TotoList","todos","TodoItem","Index","handleAdd","newTodo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.789ef003.chunk.js","sourcesContent":["export interface Todo {\r\n\tuserId: number\r\n\tid: number\r\n\ttitle: string\r\n\tcompleted: boolean\r\n}\r\n\r\nexport interface TodoState {\r\n\ttodos: Todo[]\r\n\tloading: boolean\r\n\terror: null | string\r\n}\r\n\r\nexport enum TodoActionTypes {\r\n\tFETCH_TODOS = 'FETCH_TODOS',\r\n\tFETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS',\r\n\tFETCH_TODOS_ERROR = 'FETCH_TODOS_ERROR',\r\n\tADD_TODO = 'ADD_TODO',\r\n\tREMOVE_TODO = 'REMOVE_TODO',\r\n\tEDIT_TODO = 'EDIT_TODO',\r\n}\r\n\r\nexport type QueryParams = {\r\n\t_page: number\r\n\t_limit: number\r\n}\r\n\r\ninterface FetchTodoAction {\r\n\ttype: TodoActionTypes.FETCH_TODOS\r\n}\r\n\r\ninterface FetchTodoActionSuccess {\r\n\ttype: TodoActionTypes.FETCH_TODOS_SUCCESS\r\n\tpayload: Array<any>\r\n\tpage: number\r\n\tlimit: number\r\n}\r\n\r\ninterface FetchTodoActionError {\r\n\ttype: TodoActionTypes.FETCH_TODOS_ERROR\r\n\tpayload: string\r\n}\r\n\r\ninterface AddTodo {\r\n\ttype: TodoActionTypes.ADD_TODO\r\n\tpayload: Todo\r\n}\r\n\r\ninterface RemoveTodo {\r\n\ttype: TodoActionTypes.REMOVE_TODO\r\n\tpayload: { id: number }\r\n}\r\n\r\ninterface EditTodo {\r\n\ttype: TodoActionTypes.EDIT_TODO\r\n\tpayload: Todo\r\n}\r\n\r\nexport type TodoAction =\r\n\tFetchTodoAction\r\n\t| FetchTodoActionSuccess\r\n\t| FetchTodoActionError\r\n\t| AddTodo\r\n\t| RemoveTodo\r\n\t| EditTodo","export const baseUrl = 'https://my-json-server.typicode.com/powerlimit/rtk-db'","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\r\nimport {baseUrl} from \"../config\";\r\nimport {QueryParams, Todo} from \"../types/todo\";\r\n\r\nexport const todoAPI = createApi({\r\n\treducerPath: 'todoAPI',\r\n\tbaseQuery: fetchBaseQuery({\r\n\t\tbaseUrl,\r\n\t}),\r\n\ttagTypes: ['Todos'],\r\n\tendpoints: (build) => ({\r\n\t\tfetchTodos: build.query<Todo[], QueryParams>({\r\n\t\t\tquery: (params) => ({\r\n\t\t\t\turl: '/todos',\r\n\t\t\t\tparams\r\n\t\t\t}),\r\n\t\t\tprovidesTags: () => ['Todos'],\r\n\t\t\tkeepUnusedDataFor: 10,\r\n\t\t}),\r\n\t\tfetchTodoById: build.query<Todo, number>({\r\n\t\t\tquery: (id) => ({\r\n\t\t\t\turl: `/todos/${id}`,\r\n\t\t\t}),\r\n\t\t}),\r\n\t\taddTodos: build.mutation<Todo, Todo>({\r\n\t\t\tquery: (todo) => ({\r\n\t\t\t\turl: '/todos',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: todo\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: () => ['Todos']\r\n\t\t}),\r\n\t\teditTodos: build.mutation<Todo, Todo>({\r\n\t\t\tquery: (todo) => ({\r\n\t\t\t\turl: `/todos/${todo.id}`,\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: todo\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: () => ['Todos']\r\n\t\t}),\r\n\t\tremoveTodos: build.mutation<number, number>({\r\n\t\t\tquery: (id) => ({\r\n\t\t\t\turl: `/todos/${id}`,\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: () => ['Todos']\r\n\t\t}),\r\n\t})\r\n})\r\n\r\nexport const {useFetchTodosQuery, useAddTodosMutation, useEditTodosMutation, useRemoveTodosMutation} = todoAPI\r\n","import axios, { AxiosInstance } from 'axios'\r\nimport { useState } from 'react'\r\nimport {baseUrl} from \"config\";\r\n\r\ntype TError = {\r\n\ttitle?: string\r\n\tmessage: string\r\n\tstatusCode: number\r\n}\r\n\r\ninterface IAxios {\r\n\taxios: AxiosInstance\r\n\tloading: boolean\r\n\terrors: Array<TError>\r\n}\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: baseUrl,\r\n})\r\n\r\nconst useAxios = (): IAxios => {\r\n\tconst [loading, setLoading] = useState(0)\r\n\tconst [errors, setError] = useState<Array<TError>>([])\r\n\r\n\tconst addError = (error: TError) => {\r\n\t\tconst isError = errors.find(e => e.message = error.message)\r\n\t\tif (!isError) {\r\n\t\t\tsetError(prevState => [...prevState, { ...error, title: error.title || 'Error!' }])\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetError(prevState => {\r\n\t\t\t\t\treturn prevState.filter(e => e.message !== error.message)\r\n\t\t\t\t})\r\n\t\t\t}, 5000)\r\n\t\t}\r\n\t}\r\n\r\n\tinstance.interceptors.request.use((config) => {\r\n\t\tsetLoading(prev => prev + 1)\r\n\r\n\t\treturn config\r\n\t}, (rej) => {\r\n\t\tsetLoading(prev => prev - 1)\r\n\r\n\t\treturn rej\r\n\t})\r\n\r\n\tinstance.interceptors.response.use((config) => {\r\n\t\tsetLoading(prev => prev - 1)\r\n\r\n\t\treturn config\r\n\t}, (reject) => {\r\n\t\tsetLoading(prev => prev - 1)\r\n\t\tconst { response } = reject\r\n\t\tif (response) {\r\n\t\t\taddError({ message: response.statusText, statusCode: response.status })\r\n\t\t} else {\r\n\t\t\taddError({ message: reject.message, statusCode: 500 })\r\n\t\t}\r\n\t\treturn reject\r\n\t})\r\n\r\n\r\n\treturn { axios: instance, loading: loading > 0, errors }\r\n}\r\n\r\nexport {instance as axios}\r\n\r\nexport default useAxios\r\n","import {axios} from \"hooks/useAxios\";\r\nimport {User} from \"types/user\";\r\nimport {createAsyncThunk} from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchUsers = createAsyncThunk<User[], number>(\r\n\t'user/fetchUsers',\r\n\tasync (page, thunkAPI) => {\r\n\t\ttry {\r\n\t\t\tconst users = await axios.get('/users', {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\t_page: page,\r\n\t\t\t\t\t_limit: 5\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn users.data\r\n\t\t} catch (e) {\r\n\t\t\treturn thunkAPI.rejectWithValue((e as Error).message)\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const addUser = createAsyncThunk<User, string>(\r\n\t'user/addUser',\r\n\tasync (userName) => {\r\n\t\tconst user = {name: userName} as User\r\n\t\tconst {data} = await axios.post<User>('/users', {...user})\r\n\t\treturn data\r\n\t}\r\n)\r\n\r\nexport const editUser = createAsyncThunk<User, User>(\r\n\t'user/editUser',\r\n\tasync (user) => {\r\n\t\tconst {data} = await axios.put<User>(`/users/${user.id}`, {...user})\r\n\t\treturn data\r\n\t}\r\n)\r\n\r\nexport const removeUser = createAsyncThunk<number, number>(\r\n\t'user/removeUser',\r\n\tasync (id) => {\r\n\t\tawait axios.delete(`/users/${id}`)\r\n\t\treturn id\r\n\t}\r\n)\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {User, UserState} from \"../../../types/user\";\r\nimport {addUser, editUser, fetchUsers, removeUser} from \"../../action-creators/user\";\r\n\r\nconst initialState: UserState = {\r\n\tpage: 1,\r\n\tusers: [],\r\n\tloading: false,\r\n\terror: null,\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n\tname: 'user',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetPage(state, action) {\r\n\t\t\tstate.page = action.payload\r\n\t\t}\r\n\t},\r\n\textraReducers: (builder) =>\r\n\t\tbuilder.addCase(fetchUsers.pending.type, (state) => {\r\n\t\t\tstate.loading = true\r\n\t\t\tstate.error = null\r\n\t\t})\r\n\t\t\t.addCase(fetchUsers.fulfilled.type, (state, action: PayloadAction<User[]>) => {\r\n\t\t\t\tstate.loading = false\r\n\t\t\t\tstate.users = action.payload\r\n\t\t\t})\r\n\t\t\t.addCase(fetchUsers.rejected.type, (state, action: PayloadAction<string>) => {\r\n\t\t\t\tstate.loading = false\r\n\t\t\t\tstate.error = action.payload\r\n\t\t\t})\r\n\t\t\t.addCase(addUser.fulfilled.type, (state, action: PayloadAction<User>) => {\r\n\t\t\t\tstate.users.push(action.payload)\r\n\t\t\t})\r\n\t\t\t.addCase(editUser.fulfilled.type, (state, action: PayloadAction<User>) => {\r\n\t\t\t\tconst idx = state.users.findIndex(user => user.id === action.payload.id)\r\n\t\t\t\tstate.users[idx] = action.payload\r\n\t\t\t})\r\n\t\t\t.addCase(removeUser.fulfilled.type, (state, action: PayloadAction<number>) => {\r\n\t\t\t\tstate.users = state.users.filter(u => action.payload !== u.id)\r\n\t\t\t})\r\n})\r\n\r\nexport const {setPage} = userSlice.actions\r\n\r\nexport default userSlice.reducer","import {\r\n\tMiddlewareAPI,\r\n\tisRejectedWithValue,\r\n\tMiddleware,\r\n} from '@reduxjs/toolkit'\r\nimport { toast } from 'react-toastify'\r\n\r\n/**\r\n * Log a warning and show a toast!\r\n */\r\nexport const rtkQueryErrorLogger: Middleware =\r\n\t(api: MiddlewareAPI) => (next) => (action) => {\r\n\t\tif (isRejectedWithValue(action)) {\r\n\t\t\ttoast('Error occurred')\r\n\t\t}\r\n\r\n\t\treturn next(action)\r\n\t}","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport {todoAPI} from \"../services/todoAPI\";\r\nimport userReducer from \"./reducers/user/userSlice\";\r\nimport {rtkQueryErrorLogger} from \"../helpers/errorHandler\";\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tuser: userReducer,\r\n\t\t[todoAPI.reducerPath]: todoAPI.reducer,\r\n\t},\r\n\tmiddleware: getDefaultMiddleware => {\r\n\t\treturn getDefaultMiddleware().concat([todoAPI.middleware, rtkQueryErrorLogger])\r\n\t}\r\n})\r\nexport const state = store.getState()\r\nexport type AppStore = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {AppStore} from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<AppStore> = useSelector","import {Dispatch} from \"redux\";\r\nimport {axios} from \"hooks/useAxios\";\r\nimport {Todo, TodoAction, TodoActionTypes} from \"types/todo\";\r\n\r\nexport const fetchTodos = (page = 1, limit = 10) => {\r\n\treturn async (dispatch: Dispatch<TodoAction>) => {\r\n\t\ttry {\r\n\t\t\tdispatch({type: TodoActionTypes.FETCH_TODOS})\r\n\t\t\tconst resp = await axios.get('/todos', {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\t_page: page,\r\n\t\t\t\t\t_limit: limit\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tdispatch({type: TodoActionTypes.FETCH_TODOS_SUCCESS, payload: resp.data, page, limit})\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({type: TodoActionTypes.FETCH_TODOS_ERROR, payload: (e as Error).message})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const addTodo = (todo: Todo) => {\r\n\treturn async () => {\r\n\t\tawait axios.post<Todo>('/todos', {...todo})\r\n\t}\r\n}\r\n\r\nexport const editTodo = (todo: Todo) => {\r\n\treturn async (dispatch: Dispatch<TodoAction>) => {\r\n\t\tconst {data} = await axios.put<Todo>(`/todos/${todo.id}`, {...todo})\r\n\t\tdispatch({type: TodoActionTypes.EDIT_TODO, payload: data})\r\n\t}\r\n}\r\n\r\nexport const removeTodo = (id: number) => {\r\n\treturn async (dispatch: Dispatch<TodoAction>) => {\r\n\t\tawait axios.delete(`/todos/${id}`)\r\n\t\tdispatch({type: TodoActionTypes.REMOVE_TODO, payload: {id}})\r\n\t}\r\n}","import * as UserActionCreators from './user'\r\nimport * as TodoActionCreators from './todo'\r\nimport {setPage} from \"../reducers/user/userSlice\";\r\n\r\nconst actionCreators = {\r\n\t...UserActionCreators,\r\n\t...TodoActionCreators,\r\n\tsetPage,\r\n}\r\n\r\nexport default actionCreators\r\n","import {useDispatch} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport ActionCreators from \"store/action-creators\";\r\nimport {AppDispatch} from \"../store\";\r\n\r\nexport const useTypedDispatch = () => useDispatch<AppDispatch>()\r\nexport const useActions = () => {\r\n    const dispatch = useTypedDispatch()\r\n    return bindActionCreators(ActionCreators, dispatch)\r\n}","import React, {useEffect} from \"react\";\r\nimport {Nav} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n\treturn (\r\n\t\t<Nav\r\n\t\t\tactiveKey=\"/home\"\r\n\t\t\tonSelect={(selectedKey) => alert(`selected ${selectedKey}`)}\r\n\t\t>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Link className=\"nav-link\" to=\"/\">Users</Link>\r\n\t\t\t</Nav.Item>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Link className=\"nav-link\" to=\"/todos\">Todos</Link>\r\n\t\t\t</Nav.Item>\r\n\t\t</Nav>\r\n\t)\r\n}\r\n\r\nexport default Menu\r\n","import React, {FC} from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nconst Layout: FC = ({children}) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu/>\r\n\t\t\t<Container className={'pt-5'}>\r\n\t\t\t\t{children}\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Layout\r\n","import React, {SetStateAction, Dispatch, useState} from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\ninterface IProps {\r\n\tshow: boolean\r\n\tsetShow: Dispatch<SetStateAction<boolean>>\r\n\ttitle: string\r\n\thandleSave: (_: string) => void\r\n\tvalue?: string\r\n\tisLoading?: boolean\r\n}\r\n\r\nconst ItemModal = ({show, setShow, title, handleSave, value, isLoading}: IProps) => {\r\n\r\n\tconst [val, setVal] = useState(value || '')\r\n\r\n\treturn (\r\n\t\t<Modal show={show} onHide={() => setShow(false)}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>{title}</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={val}\r\n\t\t\t\t\tonChange={(e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder={title}\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t/>\r\n\t\t\t</Modal.Body>\r\n\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={() => setShow(false)}>Close</Button>\r\n\t\t\t\t<Button disabled={isLoading} variant=\"primary\" onClick={() => {\r\n\t\t\t\t\thandleSave(val)\r\n\t\t\t\t\tsetShow(false)\r\n\t\t\t\t\tsetVal('')\r\n\t\t\t\t}}>Save changes</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default ItemModal","import {Button, ButtonGroup, ListGroup, Modal} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport {useActions} from \"hooks/useActions\";\r\nimport ItemModal from \"./ItemModal\";\r\nimport {User} from \"types/user\";\r\n\r\nconst Item = ({user}: {user: User}) => {\r\n\r\n\tconst [removeModal, setRemoveModal] = useState(false);\r\n\tconst [editModal, setEditModal] = useState(false);\r\n\r\n\tconst {removeUser, editUser} = useActions()\r\n\r\n\tconst handleRemove = async () => {\r\n\t\tawait removeUser(user.id)\r\n\t}\r\n\r\n\tconst handleEdit = async (name: string) => {\r\n\t\tawait editUser({...user, name})\r\n\t\tsetEditModal(false)\r\n\t}\r\n\r\n\treturn <ListGroup.Item>\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t{user.name}\r\n\t\t\t<ButtonGroup className={'ms-auto'} aria-label=\"Basic example\">\r\n\t\t\t\t<Button onClick={() => setEditModal(true)} variant=\"info\">Edit</Button>\r\n\t\t\t\t<Button onClick={() => setRemoveModal(true)} variant=\"danger\">Remove</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\r\n\t\t<ItemModal\r\n\t\t\tshow={editModal}\r\n\t\t\tsetShow={setEditModal}\r\n\t\t\ttitle={'Edit user'}\r\n\t\t\tvalue={user.name}\r\n\t\t\thandleSave={handleEdit}\r\n\t\t/>\r\n\r\n\t\t<Modal show={removeModal} onHide={() => setRemoveModal(false)}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Remove User</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<h3>Are you sure you want to remove {user.name}?</h3>\r\n\t\t\t</Modal.Body>\r\n\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={() => setRemoveModal(false)}>Close</Button>\r\n\t\t\t\t<Button variant=\"primary\" onClick={handleRemove}>Remove</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t</ListGroup.Item>\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import {Pagination} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport {useActions} from \"../hooks/useActions\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\n\r\nconst PaginationComponent = () => {\r\n\r\n\tconst {setPage} = useActions()\r\n\tconst {page} = useTypedSelector(state => state.user)\r\n\r\n\treturn (\r\n\t\t<Pagination className={'mt-3'}>{\r\n\t\t\t[...Array(2)].map((i, n) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Pagination.Item onClick={() => setPage(n + 1)} key={n} active={(n + 1) === page}>\r\n\t\t\t\t\t\t{n + 1}\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}</Pagination>\r\n\t)\r\n}\r\n\r\nexport default PaginationComponent\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, ListGroup} from \"react-bootstrap\";\r\nimport {useTypedSelector} from \"hooks/useTypedSelector\";\r\nimport {useActions} from \"hooks/useActions\";\r\nimport Layout from \"components/Layout\";\r\nimport ItemModal from \"components/ItemModal\";\r\nimport UserItem from \"components/UserItem\";\r\nimport PaginationComponent from \"components/Pagination\";\r\n\r\nconst Users = () => {\r\n\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst {error, loading, users, page} = useTypedSelector(state => state.user)\r\n\tconst {fetchUsers, addUser} = useActions()\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUsers(page)\r\n\t}, [page]);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<h1 className=\"h1 mb-4\">Users</h1>\r\n\t\t\t<Button variant=\"primary\" onClick={() => setShowModal(true)}>Add user</Button>\r\n\t\t\t{\r\n\t\t\t\tloading ? <div>Loading...</div> :\r\n\t\t\t\t\terror ? <div>{error}</div> :\r\n\t\t\t\t\t<ListGroup className={'mt-4'}>\r\n\t\t\t\t\t\t{users.map(user => <UserItem key={user.name} user={user}/>)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t}\r\n\t\t\t<PaginationComponent />\r\n\t\t\t<ItemModal\r\n\t\t\t\tshow={showModal}\r\n\t\t\t\tsetShow={setShowModal}\r\n\t\t\t\ttitle={'Add user'}\r\n\t\t\t\thandleSave={addUser}\r\n\t\t\t/>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default Users\r\n","import {Button, ButtonGroup, ListGroup, Modal} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport ItemModal from \"./ItemModal\";\r\nimport {Todo} from \"types/todo\";\r\nimport {useEditTodosMutation, useRemoveTodosMutation} from \"../services/todoAPI\";\r\n\r\nconst Item = ({todo}: {todo: Todo}) => {\r\n\r\n\tconst [removeModal, setRemoveModal] = useState(false);\r\n\tconst [editModal, setEditModal] = useState(false);\r\n\r\n\tconst [removeTodo] = useRemoveTodosMutation()\r\n\tconst [editTodo] = useEditTodosMutation()\r\n\r\n\tconst handleRemove = async () => {\r\n\t\tawait removeTodo(todo.id)\r\n\t}\r\n\r\n\tconst handleComplete = async () => {\r\n\t\tawait editTodo({...todo, completed: !todo.completed})\r\n\t}\r\n\r\n\tconst handleEdit = async (title: string) => {\r\n\t\tawait editTodo({...todo, title})\r\n\t\tsetEditModal(false)\r\n\t}\r\n\r\n\treturn <ListGroup.Item variant={todo.completed ? 'success' : undefined}>\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t{todo.title}\r\n\t\t\t<ButtonGroup className={'ms-auto'} aria-label=\"Basic example\">\r\n\t\t\t\t<Button onClick={() => setEditModal(true)} variant=\"info\">Edit</Button>\r\n\t\t\t\t<Button onClick={() => handleComplete()} variant=\"secondary\">Complete</Button>\r\n\t\t\t\t<Button onClick={() => setRemoveModal(true)} variant=\"danger\">Remove</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\r\n\t\t<ItemModal\r\n\t\t\tshow={editModal}\r\n\t\t\tsetShow={setEditModal}\r\n\t\t\ttitle={'Edit todo'}\r\n\t\t\tvalue={todo.title}\r\n\t\t\thandleSave={handleEdit}\r\n\t\t/>\r\n\r\n\t\t<Modal show={removeModal} onHide={() => setRemoveModal(false)}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Remove Todo</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<h3>Are you sure you want to remove {todo.title}?</h3>\r\n\t\t\t</Modal.Body>\r\n\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={() => setRemoveModal(false)}>Close</Button>\r\n\t\t\t\t<Button variant=\"primary\" onClick={handleRemove}>Remove</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t</ListGroup.Item>\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import React, {useState} from \"react\";\r\nimport {ListGroup, Pagination} from \"react-bootstrap\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport {useFetchTodosQuery} from \"../services/todoAPI\";\r\n\r\nconst TotoList = () => {\r\n\tconst [page, setPage] = useState(1)\r\n\r\n\tconst {data: todos, error, isLoading} = useFetchTodosQuery({\r\n\t\t_page: page,\r\n\t\t_limit: 10\r\n\t})\r\n\r\n\r\n\tif (error) {\r\n\t\treturn <div>Error occurred</div>\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\treturn <div>Loading...</div>\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListGroup className={'mt-4'}>\r\n\t\t\t\t{\r\n\t\t\t\t\ttodos && todos.map(todo => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TodoItem todo={todo} key={todo.id} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t</ListGroup>\r\n\t\t\t<Pagination className={'mt-3'}>{\r\n\t\t\t\t[...Array(2)].map((i, n) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Pagination.Item onClick={() => setPage(n + 1)} key={n} active={(n + 1) === page}>\r\n\t\t\t\t\t\t\t{n + 1}\r\n\t\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}</Pagination>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TotoList\r\n","import React, {useState} from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Layout from \"components/Layout\";\r\nimport ItemModal from \"../components/ItemModal\";\r\nimport {Todo} from \"../types/todo\";\r\nimport TodoList from '../components/TotoList'\r\nimport {useAddTodosMutation} from \"../services/todoAPI\";\r\n\r\nconst Index = () => {\r\n\r\n\tconst [addTodo, {isLoading, error}] = useAddTodosMutation()\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\r\n\tconst handleAdd = async (title: string) => {\r\n\t\tconst newTodo = {\r\n\t\t\ttitle,\r\n\t\t\tcompleted: false,\r\n\t\t} as Todo\r\n\r\n\t\tawait addTodo(newTodo)\r\n\t\tsetShowModal(false)\r\n\t}\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<h1 className=\"h1 mb-4\">Todos</h1>\r\n\t\t\t{error && <div>Error occurred</div>}\r\n\t\t\t<Button variant=\"primary\" onClick={() => setShowModal(true)}>Add Todo</Button>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-6\"><TodoList /></div>\r\n\t\t\t\t<div className=\"col-6\"><TodoList /></div>\r\n\t\t\t</div>\r\n\t\t\t<ItemModal\r\n\t\t\t\tshow={showModal}\r\n\t\t\t\tsetShow={setShowModal}\r\n\t\t\t\ttitle={'Add Todo'}\r\n\t\t\t\tisLoading={isLoading}\r\n\t\t\t\thandleSave={handleAdd}\r\n\t\t\t/>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default Index\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'App.css';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"store\";\r\nimport Users from \"pages/users\";\r\nimport Todos from \"pages/todos\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n    return (\r\n      <Router>\r\n        <Provider store={store}>\r\n          <ToastContainer />\r\n          <Switch>\r\n            <Route exact path=\"/todos\">\r\n              <Todos />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Users />\r\n            </Route>\r\n          </Switch>\r\n        </Provider>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}